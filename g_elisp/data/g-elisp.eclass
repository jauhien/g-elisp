# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $
# automatically generated by g-elisp
# please do not edit this file
#
# Original Author: Jauhien Piatlicki <piatlicki@gmail.com>
# Purpose: support installation of elisp packages for emacs
# from overlays generated by g-elisp
#
# Bugs to piatlicki@gmail.com
#
# @ECLASS: g-elisp.eclass
#
# @ECLASS-VARIABLE: REPO_URI
# @DESCRIPTION: address of a repository of elisp packages
#
# @ECLASS-VARIABLE: PKG_TYPE
# @DESCRIPTION: type of a package (el or tar)
#
# @ECLASS-VARIABLE: REALNAME
# @DESCRIPTION: real name of a package in the repository
#
# @ECLASS-VARIABLE: GELISP_STORE_DIR
# @DESCRIPTION: store location for downloaded sources
GELISP_STORE_DIR="${PORTAGE_ACTUAL_DISTDIR:-${DISTDIR}}"
#
# @ECLASS-VARIABLE: GELISP_FETCH_CMD
# @DESCRIPTION: fetch command
GELISP_FETCH_CMD="wget"

inherit elisp

EXPORT_FUNCTIONS src_{unpack,compile,install}

g-elisp_fetch() {
	addwrite "${GELISP_STORE_DIR}"
	pushd "${GELISP_STORE_DIR}" >/dev/null || die "can't chdir to ${GELISP_STORE_DIR}"
	local SOURCEFILE=${REALNAME}-${PV}.${PKG_TYPE}
	if [[ ! -f "${SOURCEFILE}" ]]; then
		$GELISP_FETCH_CMD ${REPO_URI}${SOURCEFILE} || die
	fi
	cp  ${SOURCEFILE} ${DISTDIR}/${P}.${PKG_TYPE} || die
	popd >/dev/null || die
}

g-elisp_src_unpack() {
	g-elisp_fetch
	if [[ ${PKG_TYPE} != "el" ]]; then
		unpack ${P}.${PKG_TYPE}
	else
		cp ${DISTDIR}/${P}.${PKG_TYPE} . || die
	fi
	elisp_src_unpack || die
}

g-elisp_src_compile() {
	rm -f ${PN}-pkg.el || die
	elisp-make-autoload-file || die
	elisp_src_compile || die
}

g-elisp_src_install() {
	local sitefile="50${PN}-gentoo.el"
	cat <<EOF >> ${sitefile} || die
(add-to-list 'load-path "@SITELISP@")
(load "${PN}-autoloads" nil t)
EOF
	elisp-site-file-install ${sitefile} || die
	rm -f ${sitefile} || die
	elisp_src_install || die
}
